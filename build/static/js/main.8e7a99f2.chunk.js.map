{"version":3,"sources":["actions/userInfo.tsx","utils/request.tsx","api/home.ts","pages/demo.tsx","api/index.ts","pages/About.tsx","pages/Topics.tsx","router/RouterMap.tsx","pages/Home.tsx","App.tsx","constans/userInfo.tsx","reducers/setUserInfo.tsx","reducers/index.tsx","registerServiceWorker.ts","index.tsx","pages/Home.module.scss"],"names":["SetUserInfo","info","type","axios","interceptors","request","use","config","console","log","error","Promise","reject","response","Check","status","msg","data","succ","errRes","success","alert","message","AxiosApi","Object","classCallCheck","this","_Check","method","url","_this","params","arguments","length","undefined","options","objectSpread","then","_checkStatus","catch","_checkCode","generalRequestAPI","mount","api","home","getHomeData","getUser","About","props","possibleConstructorReturn","getPrototypeOf","call","setName","bind","assertThisInitialized","getAds","positionId","pageSize","currentPage","onChange","age","value","totalCount","name","userInfo","react","onClick","es_button","React","connect","state","dispatch","bindActionCreators","Topic","_ref","match","topicId","UnmountTest","useEffect","forceUpdate","_useState","useState","_useState2","slicedToArray","_","x","useForceUpdate","react_default","a","createElement","RouterList","component","className","styles","hello","path","react_router_dom","to","concat","react_router","exac","render","_useState3","_useState4","count","setCount","handleCount","useCallback","RouterMap","map","item","exact","key","BasicExample","router_RouterMap","SET_USERINFO","UserInfo","combineReducers","actions","assign","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","store","createStore","reducer","ReactDOM","es","App_BasicExample","document","getElementById","URL","process","toString","origin","addEventListener","fetch","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.8e7a99f2.chunk.js","sourcesContent":["\nexport const SetUserInfo  = (info : any)=> {\n    return {\n        info,\n        type: 'SET_USERINFO',\n    }\n}\n\nexport default SetUserInfo;","import axios, { AxiosError, AxiosResponse } from 'axios';\nexport interface APIParams {\n\n}\nexport  interface ResultParam {\n    succ : boolean;\n    errorCode: null | number;\n}\n\ntype APIMethod = \"post\" | \"get\" | 'delete' | 'put';\n\n// if (process.env.NODE_ENV === \"product\" && process.env.VUE_APP_CURRENTMODE === 'daily') {\n    // axios.defaults.baseURL = 'https://daily.pinkumall.com/';\n// } else if (process.env.NODE_ENV === 'product' ) {\n    // axios.defaults.baseURL = 'https://www.pinkumall.com/';\n// }\n\n// 添加请求拦截器\naxios.interceptors.request.use(function (config) {\n    // 在发送请求之前做些什么\n    console.log(config);\n    \n    return config;\n  }, function (error) {\n    // 对请求错误做些什么\n    return Promise.reject(error);\n  });\n\n// 添加响应拦截器\naxios.interceptors.response.use(function (response) {\n    // 对响应数据做点什么\n    return response;\n  }, function (error) {\n    // 对响应错误做点什么\n    return Promise.reject(error);\n});\n\nclass Check {\n    public _checkStatus(response: AxiosResponse) {\n        // 如果http状态码正常，则直接返回数据\n        if (response && (response.status === 200 || response.status === 304 || response.status === 400)) {\n            if (response.data.succ) {\n                return response.data;\n            } else {\n                return response.data;\n            }\n        }\n        // 异常状态下，把错误信息返回去\n        return {\n            status: response.status,\n            msg: '异常'\n        };\n    }\n    public _checkCode(error: AxiosError) {\n        const errRes = error.response as AxiosResponse\n        // 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户\n        if (errRes.status === 404) {\n            console.log('Not Found');\n        } else if (errRes.data && (!errRes.data.success)) {\n            alert(errRes.data.message);\n        }\n        return error;\n    }\n}\n\nclass AxiosApi {\n    private _Check: any;\n    constructor() {\n        this._Check = new Check();\n    }\n    public request(method: APIMethod, url: string, params: any = null) {\n        const options = method==='get' ? {params} : {data:params}\n        return axios({\n            method,\n            url,\n            ...options,\n        }).then(\n            (response: AxiosResponse) => {\n                return this._Check._checkStatus(response);\n            }\n        ).catch(\n            (error: AxiosError) => {\n                return this._Check._checkCode(error);\n            }\n        );\n    }\n}\n\n//generalRequestAPI 不用解释，只是一个函数名\n\n// <InputParams extends APIParams, OutParams extends ResultParam> \n// 这个是泛型的写法，接受两个未知类型，一个 InputParams 一个  OutParams\n// InputParams 继承  APIParams； OutParams 继承 ResultParam\n\n// (method: APIMethod, url: string)\n// 简单的两个参数 和类型\n\n// : (params: InputParams)=> Promise<OutParams>\n// : 后面是 这个函数的返回类型 返回的是一个 函数，\n// 函数接受一个 参数，类型是 InputParams 函数 return 结果是 一个Promiseh函数，泛型是OutParams 这一点和 generalRequestAPI 一样\n\n// return (params: InputParams)=> new Axios().request(method,url,params) \n// 这个就是 函数 generalRequestAPI 返回结果了 \nexport default function generalRequestAPI<InputParams extends APIParams, OutParams extends ResultParam>(method: APIMethod, url: string): (params: InputParams)=> Promise<OutParams>{\n    return (params: InputParams)=> new AxiosApi().request(method,url,params) \n}\n","import generalRequestAPI, { ResultParam,} from '../utils/request';\n\n\ninterface GetHomeDataParams {\n    positionId: number ;\n    pageSize: number ;\n    currentPage: number ;\n}\ninterface Item {\n    data: string;\n    templateId: number;\n}\ninterface OutHomeDataParams extends ResultParam{\n    value: {\n        pageCount: number;\n        totalCount: number;\n        values: Item[]\n    }\n}\ninterface GerUserInfoParams {\n    id: number;\n}\nexport default {\n    getHomeData: generalRequestAPI<GetHomeDataParams, OutHomeDataParams>('get','/h5/ads/query'),\n    getUser: generalRequestAPI<GerUserInfoParams, ResultParam>('get','/userInfo'),\n}","import React, {useCallback, useEffect,useState} from 'react';\n// import About from '@/pages/About';\n\n\nlet mount: any;\nfunction useForceUpdate() {\n  const [_, forceUpdate] = useState(0);\n  console.log(_)\n  return () => forceUpdate(x => x + 1);\n}\n\nfunction UnmountTest() {\n  useEffect(() => {\n    if (!mount) {\n      mount = true;\n      console.log('did mount')\n    } else {\n      console.log('did update')\n    }\n    return () => {\n      mount = false;\n      console.log('unmount')\n    }\n  })\n  const forceUpdate = useForceUpdate();\n  return (<div>\n    我是随时被抛弃的\n    {/* <About /> */}\n    <button onClick={forceUpdate}>强制更新</button>\n  </div>);\n}\n\nexport default function State() {\n  const [count, setCount] = useState(20);\n\n  const handleCount = useCallback(() => {\n    setCount(count => count + 1)\n  }, [])\n  return (\n    <div>\n      {count}\n      <button onClick={handleCount}>count+1</button>\n      {(count % 2) && <UnmountTest />}\n    </div>\n  )\n}","import home from './home';\nexport default {\n    home\n}","import * as React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport SetUserInfo  from '../actions/userInfo'\nimport { IUserInfo } from '../reducers/setUserInfo';\nimport api from '../api';\nimport { Button } from 'antd';\n\ninterface IComponentStateProps  {\n    userInfo: IUserInfo;\n}\ninterface IComponentDispatchProps {\n    onChange : (val: any)=>void;\n}\n\ninterface IProps extends IComponentStateProps,IComponentDispatchProps {\n}\n\nclass About extends React.Component<IProps> {\n    public constructor (props: any) {\n        super(props);\n        this.setName = this.setName.bind(this);\n    }\n    public setName () {\n        this.getAds();\n    }\n    public async getAds() {\n\n        const response = await api.home.getHomeData({\n            positionId: 6,\n            pageSize: 100,\n            currentPage: 1\n        })\n        console.log('pageCount',response)\n        this.props.onChange({\n            age: response.value.totalCount,\n            name: 'xingyao',\n        })\n    }\n    async componentWillMount() {\n        this.setName();\n        // const response = await api.home.getUser({\n        //     id: 1231\n        // });\n        // console.log(response)\n\n    }\n    public render() {\n        const { userInfo } = this.props;\n        return(\n            <div>\n                <div>this is about</div>\n                <p>{ userInfo.name }</p>\n                <p>{ userInfo.age }</p>\n                <div onClick={this.setName}>set Name</div>\n\n                <Button type=\"primary\">Button</Button>\n            </div>\n        ) \n    }\n}\n\nconst mapStateToProps = (state : any) => {\n    return state\n  }\nconst mapDispatchToProps = (dispatch : any) => {\n    return bindActionCreators({onChange: SetUserInfo}, dispatch);\n  }\n\nexport default connect(mapStateToProps,mapDispatchToProps)(About);","import * as React from 'react';\nimport { Link, Route } from \"react-router-dom\";\ninterface IProps {\n    match : any\n}\n\nclass Topics extends React.Component<IProps> {\n    public render(){\n        const {match} =  this.props;\n        return(\n            <div>\n                <h2>Topics</h2>\n                <ul>\n                    <li>\n                    <Link to={`${match.url}/rendering`}>Rendering with React</Link>\n                    </li>\n                    <li>\n                    <Link to={`${match.url}/components`}>Components</Link>\n                    </li>\n                    <li>\n                    <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\n                    </li>\n                </ul>\n\n                <Route path={`${match.path}/:topicId`} component={Topic} />\n                <Route\n                    exac={true}\n                    path={match.path}\n                    render={() => <h3>Please select a topic.</h3>}\n                />\n            </div>\n        )\n    }\n}\n\n\nfunction Topic({ match }: { match: any}) {\n    return (\n      <div>\n        <h3>{match.params.topicId}</h3>\n      </div>\n    );\n  }\n  \nexport default Topics;","import * as React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport About from '../pages/About';\nimport Home from '../pages/Home';\nimport Topics from '../pages/Topics';\nimport Demo from '../pages/demo';\ninterface IRouterItem {\n    component: any;\n    path: string;\n}\n\nconst RouterList : IRouterItem[] = [\n    {\n        component: Home,\n        path: '/'\n    },\n    {\n        component: About,\n        path: '/about'\n    },\n    {\n        component: Topics,\n        path: '/topics'\n    },\n    {\n        component: Demo,\n        path: '/demo'\n    }\n]\n\nconst RouterMap = ()=> (\n    <Switch>\n        {\n           RouterList.map(item=>(\n               <Route\n                    exact={true}\n                    path= {item.path}\n                    key={item.path}\n                    component= {item.component}\n                />\n           )) \n        }\n    </Switch>\n)\n\nexport default RouterMap;","import  React, { useState } from \"react\";\n// import HomeTop from './HomeComponent/HomeTop'\n// import HomeTitle from './HomeComponent/HomeTitle'\nimport styles from  './Home.module.scss';\ninterface IProps {\n    name : string | string[]\n}\n\nconst Home: React.FC = ()=>{\n    const [name, setName ] = useState('sauron');\n\n    const clickFun = ()=>{\n        setName('xingyao')\n        console.log(name)\n    }\n\n    return (\n        <div className='Home'>\n            <div className={styles.hello} onClick={ clickFun }>{ name }</div>\n        </div>\n    )\n} \n\nexport default Home;","import * as React  from \"react\";\nimport { BrowserRouter as Router , Link} from \"react-router-dom\";\nimport RouterMap from './router/RouterMap';\nimport './App.scss';\n\nexport default class BasicExample extends React.Component {\n  render() {\n    return (\n      <Router >\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/topics\">Topics</Link>\n            </li>\n            <li>\n              <Link to=\"/demo\">Demo</Link>\n            </li>\n          </ul>\n  \n          <hr />\n          <RouterMap />\n      </Router>\n    );\n  }\n}","export const SET_USERINFO = \"SET_USERINFO\";","import { SET_USERINFO } from '../constans/userInfo';\n\nexport interface IUserInfo {\n    age ?: number ;\n    name ?: string ;\n}\ninterface IUserInfoAction {\n    type : string; \n    info : IUserInfo;\n}\nconst UserInfo : IUserInfo = {\n    age : 0 ,\n    name : 'sauron'\n}\n\nexport function userInfo(state = UserInfo, actions: IUserInfoAction) {\n    switch (actions.type) {\n        case SET_USERINFO :\n            return Object.assign({},state,actions.info);\n        default :\n        return state;\n    }\n}","import { combineReducers } from 'redux';\nimport { userInfo } from './setUserInfo';\n\nexport default combineReducers({\n    userInfo\n})","// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export default function register() {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(\n        process.env.PUBLIC_URL!,\n        window.location.toString()\n      );\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Lets check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit https://goo.gl/SC7cgQ'\n            );\n          });\n        } else {\n          // Is not local host. Just register service worker\n          registerValidSW(swUrl);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl: string) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker) {\n            installingWorker.onstatechange = () => {\n              if (installingWorker.state === 'installed') {\n                if (navigator.serviceWorker.controller) {\n                  // At this point, the old content will have been purged and\n                  // the fresh content will have been added to the cache.\n                  // It's the perfect time to display a 'New content is\n                  // available; please refresh.' message in your web app.\n                  console.log('New content is available; please refresh.');\n                } else {\n                  // At this point, everything has been precached.\n                  // It's the perfect time to display a\n                  // 'Content is cached for offline use.' message.\n                  console.log('Content is cached for offline use.');\n                }\n              }\n            };\n          }\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl: string) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        if (\n          response.status === 404 ||\n          response.headers.get('content-type')!.indexOf('javascript') === -1\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport reducer from './reducers'\nimport registerServiceWorker from './registerServiceWorker';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nconst store = createStore(reducer);\n\nReactDOM.render(\n  <Provider store={ store }>\n      <App />\n  </Provider>,\n  document.getElementById('root') as HTMLElement\n);\nregisterServiceWorker();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"hello\":\"Home_hello__35Fgn\"};"],"sourceRoot":""}